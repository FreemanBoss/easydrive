name: Test Ansible Job in Isolation

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test-ansible:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Step 3: Install Ansible and Required Collections
      - name: Install Ansible and Required Collections
        run: |
          python -m pip install --upgrade pip
          pip install ansible ansible-lint
          ansible-galaxy collection install community.docker

      # Step 4: Validate Ansible Playbook Syntax
      - name: Validate Ansible Playbook Syntax
        run: ansible-playbook --syntax-check ansible/provision.yml

      # Step 5: Run Ansible Playbook with Debug
      - name: Run Ansible Playbook with Debug
        run: |
          ansible-playbook ansible/provision.yml -vvvv
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          LINODE_HOST: ${{ secrets.LINODE_HOST }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      # Step 6: Run the Ansible Playbook
      - name: Run Ansible Playbook
        run: |
          ansible-playbook ansible/provision.yml --extra-vars "linode_host=${{ secrets.LINODE_HOST }} ansible_ssh_private_key_file=${{ secrets.SSH_PRIVATE_KEY }}"
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          LINODE_HOST: ${{ secrets.LINODE_HOST }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
