name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  pull_request:
    branches:
      - release-*  # Trigger workflows for PRs targeting release-* branches
      - main        # Trigger for PRs targeting main branch
  workflow_dispatch:  # Manual trigger for the build job

jobs:
  lint:
    if: github.ref == 'refs/heads/main'
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run Linter
        run: npm run lint

  security_scan:
    if: github.ref == 'refs/heads/main'
    name: Security Scan
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Security Scan
        run: npm audit --audit-level=high

  build:
    if: github.ref == 'refs/heads/main'
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: security_scan
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Verify Docker Login
        run: docker info  

      - name: Build Docker Image
        run: |
          docker build -t egbe01/easydrive:${{ github.sha }} .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push egbe01/easydrive:${{ github.sha }}

 deploy:
  name: Deploy Application
  runs-on: ubuntu-latest
  needs: build
  steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Deploy Docker Image to Linode
      run: |
        echo "Deploying Docker image..."
        # SSH into the Linode server and pull the Docker image
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@${{ secrets.LINODE_HOST }} <<EOF
          # Pull the Docker image from Docker Hub
          docker pull egbe01/easydrive:${{ github.sha }}
          
          # Stop and remove the existing container (if it exists)
          docker stop easydrive || true
          docker rm easydrive || true
          
          # Run the new Docker container
          docker run -d --name easydrive -p 80:80 egbe01/easydrive:${{ github.sha }}
        EOF
